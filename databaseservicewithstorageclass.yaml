apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: gcp-storage-class
provisioner: kubernetes.io/gce-pd

---

apiVersion: v1
# define a resource for volume chain
kind: PersistentVolumeClaim
metadata:
  # Name the volume chain
  name: db-pv-claim
spec:
  storageClassName: gcp-storage-class
  accessModes:
    # Allow ReadWrite to multiple pods
    - ReadWriteOnce
  # PVC requesting resources
  resources:
    requests:
      # the PVC storage
      storage: 1Gi

---

# Kubernetes API version
apiVersion: apps/v1
# Deployment object
kind: Deployment
metadata:
  # The name of the Deployment
  name: postgresdb
spec:
  # Replicas for this Deployment
  replicas: 1
  selector:
    # labels the pods
    matchLabels:
      app: postgresdb
  template:
    metadata:
      labels:
        # The label the pods created from the pod template should have
        app: postgresdb
    spec:
      containers:
        # The container name to execute pods
        - name: postgresdb
          # pull postgresimage from docker hub
          image: postgres:12
          ports:
            # Assign ports to expose container
            - containerPort: 5432
          envFrom:
            # Load the environment variables/PostgresSQL credentials
            - configMapRef:
                # This should be the ConfigMap name created ealier
                name: db-secret-credentials
          volumeMounts:
            # The volume mounts  for the container
            #- mountPath: /var/lib/postgres/data
            - mountPath: /var/lib/postgres/data
              name: db-data
      # Volumes attached to the pod
      volumes:
        - name: db-data
          persistentVolumeClaim:
            # reference the PersistentVolumeClaim
            claimName: db-pv-claim

---

apiVersion: v1
# Kind for service
kind: Service
metadata:
  # Name your service
  name: postgresdb-service
  labels:
    app: postgresdb
spec:
  # Choose how to expose your service
  type: ClusterIP
  ports:
    # The port number to expose the service
    - protocol: TCP
      port: 5432
      targetPort: 5432
  # Pod to route service traffic  
  selector:
    app: postgresdb